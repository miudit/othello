# -*- coding:utf-8 -*-

import board
import endGameBrain

pattern15 = [
	(	[2,2,1,2,0,0,0,2,
		 2,0,1,1,1,1,2,0,
		 2,0,0,0,1,1,0,0,
		 0,0,0,0,0,1,0,0,
		 0,0,1,1,1,1,0,0,
		 0,0,1,1,0,1,0,0,
		 0,2,1,1,1,1,2,0,
		 2,2,1,2,2,1,2,2
		], 1),
	(	[2,1,1,1,1,1,2,2,
		 1,2,1,0,0,1,2,0,
		 1,1,1,1,1,1,1,0,
		 1,1,1,1,1,1,1,0,
		 1,1,1,0,0,1,0,0,
		 1,1,0,0,0,0,2,2,
		 1,2,0,1,0,2,2,2,
		 2,2,0,0,0,0,2,2
		], 1)
]

pattern16 = [
	(	[2,2,1,2,0,0,0,2,
		 2,2,1,1,1,1,2,0,
		 2,0,1,0,1,1,0,0,
		 0,0,0,0,0,1,0,0,
		 0,0,1,1,1,1,0,0,
		 0,0,1,1,0,1,0,0,
		 0,2,1,1,1,1,2,0,
		 2,2,1,2,2,1,2,2
		], 0),
	(	[2,1,1,1,1,1,2,2,
		 1,2,1,0,0,1,2,0,
		 1,1,1,1,1,1,1,0,
		 1,1,1,1,1,1,1,0,
		 1,1,1,0,0,1,0,0,
		 1,1,0,0,1,2,2,2,
		 1,2,0,1,0,2,2,2,
		 2,2,0,0,0,0,2,2
		], 0)
]

pattern17 = [
	(	[2,2,1,2,0,0,0,2,
		 2,2,1,1,1,1,2,0,
		 2,0,1,0,1,1,0,0,
		 0,0,0,0,0,1,0,0,
		 0,0,1,1,1,1,0,0,
		 0,0,0,0,0,1,0,0,
		 0,2,2,1,1,1,2,0,
		 2,2,1,2,2,1,2,2
		], 1),
	(	[2,1,1,1,1,1,2,2,
		 1,2,1,0,0,1,2,0,
		 1,1,1,1,1,1,1,0,
		 1,1,1,1,0,0,2,0,
		 1,1,1,0,0,0,0,0,
		 1,1,0,0,0,2,2,2,
		 1,2,0,1,0,2,2,2,
		 2,2,0,0,0,0,2,2
		], 1)
]

pattern18 = [
	(	[2,2,1,2,0,0,0,2,
		 2,2,1,1,1,1,2,0,
		 2,0,1,0,1,1,0,0,
		 2,1,0,0,0,1,0,0,
		 1,1,1,1,1,1,0,0,
		 0,0,0,0,0,1,0,0,
		 0,2,2,1,1,1,2,0,
		 2,2,1,2,2,1,2,2
		], 0),
	(	[2,1,1,1,1,1,2,2,
		 1,2,1,0,0,1,2,0,
		 1,1,1,1,1,1,1,1,
		 1,1,1,1,0,0,2,1,
		 1,1,1,0,0,0,0,2,
		 1,1,0,0,0,2,2,2,
		 1,2,0,1,0,2,2,2,
		 2,2,0,0,0,0,2,2
		], 0)
]

pattern19 = [
	(	[2,2,1,2,0,0,0,2,
		 2,2,1,1,1,1,2,0,
		 2,0,0,0,1,1,0,0,
		 2,0,0,0,0,1,0,0,
		 2,0,0,0,1,1,0,0,
		 0,0,0,0,0,1,0,0,
		 0,2,2,1,1,1,2,0,
		 2,2,1,2,2,1,2,2
		], 1),
	(	[2,1,1,1,1,1,2,2,
		 1,2,1,0,0,1,2,0,
		 1,1,1,1,0,0,0,2,
		 1,1,1,1,0,0,2,1,
		 1,1,1,0,0,0,0,2,
		 1,1,0,0,0,2,2,2,
		 1,2,0,1,0,2,2,2,
		 2,2,0,0,0,0,2,2
		], 1)
]

pattern20 = [
	(	[2,2,1,2,0,0,0,2,
		 2,2,1,1,1,1,2,0,
		 2,0,0,0,1,1,0,0,
		 2,0,0,0,0,1,0,0,
		 2,0,0,0,1,1,0,0,
		 0,1,0,0,0,1,0,0,
		 2,2,2,1,1,1,2,0,
		 2,2,1,2,2,1,2,2
		 ], 0),
	(	[2,1,1,1,1,1,2,2,
		 1,2,1,0,0,1,2,2,
		 1,1,1,1,0,0,1,2,
		 1,1,1,1,0,0,2,1,
		 1,1,1,0,0,0,0,2,
		 1,1,0,0,0,2,2,2,
		 1,2,0,1,0,2,2,2,
		 2,2,0,0,0,0,2,2
		], 0)
]

pattern = [pattern15, pattern16, pattern17, pattern18, pattern19, pattern20]

def state2code(state):
	res = [0] * 38
	for y in range(8):
		for x in range(8):
			res[y] += state[x+y*8] * 3 ** x
	for x in range(8):
		for y in range(8):
			res[8+x] += state[x+y*8] * 3 ** y
	for x in range(2,8):
		for y in range(x+1):
			res[16+x-2] += state[x+y*8] * 3 ** y
	for y in range(1,6):
		for x in range(7,)
    return res


def main():
	board = board.Board()
	state, color = pattern[0]
	board.restoreState(state2code(state))
	endGameBrain = endGameBrain(board,color)

if __name__ == "__main__":
	main()
